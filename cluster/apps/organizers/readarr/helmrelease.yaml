---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: organizers
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
  # - name: traefik
    # namespace: traefik
    - name: downloads-gateway
      namespace: vpn
  values:
    image:
      repository: ghcr.io/onedr0p/readarr-nightly
      tag: 0.1.1.1426@sha256:f7513a7aea80362daecb3ba543092a87d436e0bb7ed6d3a2df3f8d31d093c9a2

    env:
      TZ: "${TZ}"
      READARR__INSTANCE_NAME: Readarr
      READARR__PORT: &port 80
      READARR__LOG_LEVEL: info
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "book-open-page-variant"
        # traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        # traefik.ingress.kubernetes.io/router.middlewares: traefik-internal-ipwhitelist@kubernetescrd
        # traefik.ingress.kubernetes.io/router.middlewares: traefik-authelia@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT}
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100

    persistence:
      config:
        enabled: true
        existingClaim: readarr-config-v1
      books:
        enabled: true
        type: nfs
        server: &nas "${NFS_SERVER}"
        path: ${NFS_BOOKS}
        mountPath: /media
      downloads:
        enabled: true
        type: nfs
        server: *nas
        path: ${NFS_DOWNLOAD}
        mountPath: /downloads
    podAnnotations:
      backup.velero.io/backup-volumes: config
    resources:
      requests:
        memory: 377M
        ephemeral-storage: "2Gi"
      limits:
        memory: 2130M
        ephemeral-storage: "4Gi"
