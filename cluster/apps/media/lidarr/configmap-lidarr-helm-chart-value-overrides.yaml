---
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: lidarr-helm-chart-value-overrides
  namespace: media
data:
  values.yaml: |-
    image:
      repository: ghcr.io/k8s-at-home/lidarr
      tag: v1.0.0.2255
      pullPolicy: IfNotPresent
    env:
      TZ: ${TZ}
    service:
      main:
        ports:
          http:
            port: 8686
      ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          hajimari.io/enable: "true"
        hosts:
          - host: &host lidarr.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: ${SECRET_CERT}
            hosts:
              - *host
    probes:
      liveness:
        enabled: true
        custom: true
        spec:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - curl --fail localhost:8686/api/v1/system/status?apiKey=`IFS=\> && while
              read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        enabled: true
        size: 1Gi
      media:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: ${NFS_MEDIA}
      downloads:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: ${NFS_DOWNLOAD}
      music:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: ${NFS_MUSIC}

    metrics:
      # -- Enable and configure Exportarr sidecar and Prometheus serviceMonitor.
      # @default -- See values.yaml
      enabled: false
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
        labels: {}
      # -- Enable and configure Prometheus Rules for the chart under this key.
      # @default -- See values.yaml
      prometheusRule:
        enabled: false
        labels: {}
        # -- Configure additionial rules for the chart under this key.
        # @default -- See prometheusrules.yaml
        rules: []
          # - alert: LidarrDown
          #   annotations:
          #     description: Lidarr service is down.
          #     summary: Lidarr is down.
          #   expr: |
          #     lidarr_system_status == 0
          #   for: 5m
          #   labels:
          #     severity: critical
      exporter:
        image:
          # -- image repository
          repository: ghcr.io/onedr0p/exportarr
          # -- image tag
          tag: v1.0.0
          # -- image pull policy
          pullPolicy: IfNotPresent
        env:
          # -- metrics port
          port: 9792
          # -- Set to true to enable gathering of additional metrics (slow)
          additionalMetrics: false
          # -- Set to true to enable gathering unknown queue items
          unknownQueueItems: false
