---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app tdarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: haveagitgat/tdarr
      tag: 2.00.18.2
      pullPolicy: IfNotPresent
    env:
      TZ: ${TZ}
      serverIP: 0.0.0.0
      ffmpegPath: /usr/local/bin/ffmpeg
    podSecurityContext:
      # Required for passthrough of /dev/dri devices from NFD
      # https://dgpu-docs.intel.com/installation-guides/ubuntu/ubuntu-focal.html
      supplementalGroups:
        - 44
        - 109
    node:
      enabled: true
      id: node
      image:
        repository: haveagitgat/tdarr_node
        tag: 2.00.18.2
        pullPolicy: IfNotPresent
    persistence:
      data:
        enabled: true
        mountPath: /app/server
        existingClaim: tdarr-serverdata-v1
      shared:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: ${NFS_MEDIA}/cache
        mountPath: /shared
      media:
        enabled: true
        type: nfs
        path: /volume1/Media
        server: ${NFS_SERVER}
        mountPath: /media
    service:
      main:
        ports:
          http:
            port: 8265
          server:
            enabled: true
            protocol: TCP
            port: 8266
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "true"
          hajimari.io/icon: alpha-t-circle
          hajimari.io/group: media
        hosts:
          - host: tdarr.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - tdarr.${SECRET_DOMAIN}
            secretName: ${SECRET_CERT}
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - k8s-worker1
                    - k8s-worker2
                    - k8s-worker3
    resources: {}
