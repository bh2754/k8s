---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: velero
  namespace: velero
spec:
  interval: 5m
  chart:
    spec:
      chart: velero
      version: 2.31.8
      sourceRef:
        kind: HelmRepository
        name: vmware-tanzu-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: velero/velero
      tag: v1.9.2
    # repository: ghcr.io/k8s-at-home/velero
    configuration:
      extraEnvVars:
        TZ: "${TZ}"
      provider: aws
      backupStorageLocation:
        name: default
        bucket: backup
        config:
          region: us-east-1
          s3ForcePathStyle: true
          s3Url: https://s3.${SECRET_DOMAIN}
          publicUrl: https://s3.${SECRET_DOMAIN}
      volumeSnapshotLocation:
        name: aws
        config:
          region: us-east-1
      resticTimeout: 6h
      logLevel: debug
    initContainers:
      - name: velero-plugin-for-aws
        image: ghcr.io/k8s-at-home/velero-plugin-for-aws:v1.5.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins
    credentials:
      existingSecret: velero-s3-creds
    schedules:
      daily-backup:
        schedule: "0 3 * * *"
        template:
        # defaultVolumesToRestic: true
          ttl: "120h"
      media:
        schedule: "0 */3 * * *"
        template:
        # defaultVolumesToRestic: true
          includedNamespaces:
            - vpn
            - downloads
            - organizers
            - media
#         labelSelector:
#           matchLabels:
#             application: mediabackup
          ttl: "120h"
    metrics:
      enabled: true
      # serviceMonitor:
      #   enabled: true
    snapshotsEnabled: true
    upgradeCRDs: false
    cleanUpCRDs: false
    kubectl:
      image:
        repository: ghcr.io/k8s-at-home/kubectl
        tag: v1.25.2
    deployRestic: true
    restic:
      podVolumePath: /var/lib/kubelet/pods
      privileged: false
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
      resources:
        requests:
          memory: 200Mi
          cpu: 15m
        limits:
          memory: 3000Mi
    resources:
      requests:
        memory: 300Mi
        cpu: 25m
      limits:
        memory: 1500Mi
