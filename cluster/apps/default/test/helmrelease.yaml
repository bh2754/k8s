---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app test
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    global:
      nameOverride:
      fullnameOverride:
      labels: {}
      annotations: {}
    controller:
      enabled: true
      type: deployment
      annotations: {}
      labels: {}
      replicas: 1
      strategy:
      rollingUpdate:
        unavailable:
        surge:
        partition:
      revisionHistoryLimit: 3
      podManagementPolicy:
    image:
      repository: extremeshok/unbound
      tag: latest
      pullPolicy: IfNotPresent
    imagePullSecrets: []
    command: []
    args: []
    podAnnotations: {}
    podLabels: {}
    autoscaling:
      enabled: false
      target:  # deploymentname
      minReplicas:  # 1
      maxReplicas:  # 100
      targetCPUUtilizationPercentage:  # 80
      targetMemoryUtilizationPercentage:  # 80
    serviceAccount:
      create: true
      annotations: {}
      name: ""
    automountServiceAccountToken: true
    secret: {}
    configMap:
      config:
        enabled: false
        labels: {}
        annotations: {}
        data: {}
    env:
    envFrom: []
    priorityClassName:  # system-node-critical
    runtimeClassName:  # nvidia
    schedulerName:  # awkward-dangerous-scheduler
    hostname:
    hostNetwork: false
    dnsPolicy:  # ClusterFirst
    dnsConfig: {}
    enableServiceLinks: true
    podSecurityContext:
      sysctls:
        - name: net.core.rmem_max
          value: "8000"
    securityContext:
    lifecycle: {}
    initContainers: {}
    additionalContainers: {}
    probes:
      liveness:
        enabled: false
        custom: false
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness:
        enabled: false
        custom: false
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      startup:
        enabled: false
        custom: false
        spec:
          initialDelaySeconds: 0
          timeoutSeconds: 1
          periodSeconds: 5
          failureThreshold: 30
    termination:
      messagePath:
      messagePolicy:
      gracePeriodSeconds:
    service:
      main:
        enabled: true
        primary: true
        type: ClusterIP
        ports:
          dns-tcp:
            enabled: true
            primary: false
            protocol: TCP
            port: 53
          dns-udp:
            enabled: true
            primary: true
            protocol: UDP
            port: 53
          http:
            enabled: false
            primary: true
            port:
            protocol: HTTP
            targetPort:
            nodePort:
    ingress:
      main:
        enabled: false
        primary: true
        nameOverride:
        annotations: {}
        labels: {}
        ingressClassName:  # "nginx"
        hosts:
          host: chart-example.local
          paths:
            path: /
            pathType: Prefix
            service:
              name:
              port:
        tls: []
    persistence:
      config:
        enabled: true
        type: pvc
        mountPath: /config
        readOnly: false
        storageClass: "longhorn"
        existingClaim: test-config-v1
        accessMode: ReadWriteOnce
      shared:
        enabled: false
        type: emptyDir
        mountPath: /shared
        medium:  # Memory
        sizeLimit:  # 1Gi
    volumeClaimTemplates: []
    nodeSelector: {}
    affinity: {}
    topologySpreadConstraints: []
    tolerations: []
    hostAliases: []
    resources: {}
    addons:
      codeserver:
        enabled: true
        image:
          repository: ghcr.io/coder/code-server
          tag: 4.7.1
          pullPolicy: IfNotPresent
        env: {}
        args:
          - --auth
          - none
          - --user-data-dir
          - "/config/.vscode"
        volumeMounts:
          - name: config
            mountPath: /data/config
        workingDir: ""
        git:
          deployKey: ""
          deployKeyBase64: ""
          deployKeySecret: ""
        service:
          enabled: true
          type: ClusterIP
          ports:
            codeserver:
              port: 12321
              enabled: true
              protocol: TCP
              targetPort: codeserver
          annotations: {}
          labels: {}
        ingress:
          enabled: true
          annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          ingressClassName: "traefik"
          hosts:
            - host: &host1 code.${SECRET_DOMAIN}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: ${SECRET_CERT}
              hosts:
                - *host1

        securityContext:
          runAsUser: 0
      netshoot:
        enabled: true
        image:
          repository: ghcr.io/nicolaka/netshoot
          tag: v0.7
          pullPolicy: IfNotPresent
        env: {}
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
