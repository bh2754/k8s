---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: wg
  namespace: wireguard
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 5
  values:
    image:
      repository: linuxserver/wireguard
      tag: latest
      pullPolicy: IfNotPresent
    # -- Override the command(s) for the default container
    command: []
    # -- Override the args for the default container
    args: []

    # -- Set annotations on the pod
    podAnnotations: {}

    # -- Set labels on the pod
    podLabels: {}

    serviceAccount:
      # -- Specifies whether a service account should be created
      create: true

      # -- Annotations to add to the service account
      annotations: {}

      # -- The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    # -- Specifies whether a service account token should be automatically mounted.
    automountServiceAccountToken: true

    # -- Use this to populate a secret with the values you specify.
    # Be aware that these values are not encrypted by default, and could therefore visible
    # to anybody with access to the values.yaml file.
    secret: {}
      # PASSWORD: my-password

    # -- Configure configMaps for the chart here.
    # Additional configMaps can be added by adding a dictionary key similar to the 'config' object.
    # @default -- See below
    configmap:
      config:
        # -- Enables or disables the configMap
        enabled: false
        # -- Labels to add to the configMap
        labels: {}
        # -- Annotations to add to the configMap
        annotations: {}
        # -- configMap data content. Helm template enabled.
        data: {}
          # foo: bar

    # -- Main environment variables. Template enabled.
    # Syntax options:
    # A) TZ: UTC
    # B) PASSWD: '{{ .Release.Name }}'
    # C) PASSWD:
    #      configMapKeyRef:
    #        name: config-map-name
    #        key: key-name
    # D) PASSWD:
    #      valueFrom:
    #        secretKeyRef:
    #          name: secret-name
    #          key: key-name
    #      ...
    # E) - name: TZ
    #      value: UTC
    # F) - name: TZ
    #      value: '{{ .Release.Name }}'
    env:
      PUID: 1000
      PGID: 1000
      TZ: ${TZ}
      SERVERURL: wireguard.${SECRET_DOMAIN}
      PEERS: 3
      PEERDNS: 10.0.102.102
      ALLOWEDIPS: 0.0.0.0/0
      IPTABLES_BACKEND: legacy

    # -- Secrets and/or ConfigMaps that will be loaded as environment variables.
    # [[ref]](https://unofficial-kubernetes.readthedocs.io/en/latest/tasks/configure-pod-container/configmap/#use-case-consume-configmap-in-environment-variables)
    envFrom: []
    # - configMapRef:
    #     name: config-map-name
    # - secretRef:
    #     name: secret-name

    # -- Custom priority class for different treatment by the scheduler
    priorityClassName:  # system-node-critical

    # -- Allow specifying a runtimeClassName other than the default one (ie: nvidia)
    runtimeClassName:  # nvidia

    # -- Allows specifying a custom scheduler name
    schedulerName:  # awkward-dangerous-scheduler

    # -- Allows specifying explicit hostname setting
    hostname:

    # -- When using hostNetwork make sure you set dnsPolicy to `ClusterFirstWithHostNet`
    hostNetwork: false

    # -- Defaults to "ClusterFirst" if hostNetwork is false and "ClusterFirstWithHostNet" if hostNetwork is true.
    dnsPolicy:  # ClusterFirst

    # -- Optional DNS settings, configuring the ndots option may resolve nslookup issues on some Kubernetes setups.
    dnsConfig: {}
    #   options:
    #     - name: ndots
    #       value: "1"

    # -- Enable/disable the generation of environment variables for services.
    # [[ref]](https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service)
    enableServiceLinks: true

    # -- Configure the Security Context for the Pod
    podSecurityContext: {}

    # -- Configure the Security Context for the main container
    securityContext:
      capabilities:
        add:
          - NET_ADMIN
          - SYS_MODULE
    # -- Configure the lifecycle for the main container
    lifecycle: {}

    # -- Specify any initContainers here as dictionary items. Each initContainer should have its own key.
    # The dictionary item key will determine the order. Helm templates can be used.
    initContainers: {}

    # -- Specify any additional containers here as dictionary items. Each additional container should have its own key.
    # Helm templates can be used.
    additionalContainers: {}

    # -- Probe configuration
    # -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
    # @default -- See below
    probes:
      # -- Liveness probe configuration
      # @default -- See below
      liveness:
        # -- Enable the liveness probe
        enabled: false
        # -- Set this to `true` if you wish to specify your own livenessProbe
        custom: false
        # -- The spec field contains the values for the default livenessProbe.
        # If you selected `custom: true`, this field holds the definition of the livenessProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Redainess probe configuration
      # @default -- See below
      readiness:
        # -- Enable the readiness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own readinessProbe
        custom: false
        # -- The spec field contains the values for the default readinessProbe.
        # If you selected `custom: true`, this field holds the definition of the readinessProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Startup probe configuration
      # @default -- See below
      startup:
        # -- Enable the startup probe
        enabled: false
        # -- Set this to `true` if you wish to specify your own startupProbe
        custom: false
        # -- The spec field contains the values for the default startupProbe.
        # If you selected `custom: true`, this field holds the definition of the startupProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          timeoutSeconds: 1
          ## This means it has a maximum of 5*30=150 seconds to start up before it fails
          periodSeconds: 5
          failureThreshold: 30

    termination:
      # -- Configure the path at which the file to which the main container's termination message will be written.
      # -- [[ref](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle-1)]
      messagePath:

      # -- Indicate how the main container's termination message should be populated.
      # Valid options are `File` and `FallbackToLogsOnError`.
      # -- [[ref](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle-1)]
      messagePolicy:

      # -- Duration in seconds the pod needs to terminate gracefully
      # -- [[ref](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle)]
      gracePeriodSeconds:

    # -- Configure the services for the chart here.
    # Additional services can be added by adding a dictionary key similar to the 'main' service.
    # @default -- See below
    service:
      main:
        # -- Enables or disables the service
        enabled: true
        primary: true

        # -- Override the name suffix that is used for this service
        nameOverride:

        # -- Set the service type
        type: LoadBalancer
        loadBalancerIP: ${METALLB_WIREGUARD_ADDR}
        externalIP: ${METALB_WIREGUARD_ADDR}
        monitor:
          # -- Enables or disables the serviceMonitor.
          enabled: false
          # -- Configures the endpoints for the serviceMonitor.
          # @default -- See values.yaml
          endpoints:
            - port: http
              scheme: http
              path: /metrics
              interval: 1m
              scrapeTimeout: 10s

        # -- Configure the Service port information here.
        # Additional ports can be added by adding a dictionary key similar to the 'http' service.
        # @default -- See below
        ports:
          http:
            # -- Enables or disables the port
            enabled: false
            primary: false
            port:
            protocol: HTTP
            targetPort:
          wireguard:
            enabled: true
            primary: true
            port: 51820
            protocol: UDP
            targetPort: 51820
    # -- Configure the ingresses for the chart here.
    # Additional ingresses can be added by adding a dictionary key similar to the 'main' ingress.
    # @default -- See below
    ingress:
      main:
        # -- Enables or disables the ingress
        enabled: false

        # -- Make this the primary ingress (used in probes, notes, etc...).
        # If there is more than 1 ingress, make sure that only 1 ingress is marked as primary.
        primary: true

        # -- Override the name suffix that is used for this ingress.
        nameOverride:

        # -- Provide additional annotations which may be required.
        annotations: {}
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"

        # -- Provide additional labels which may be required.
        labels: {}

        # -- Set the ingressClass that is used for this ingress.
        # Requires Kubernetes >=1.19
        ingressClassName:  # "nginx"

        ## Configure the hosts for the ingress
        hosts:
          -  # -- Host address. Helm template can be passed.
            host: chart-example.local
            ## Configure the paths for the host
            paths:
              -  # -- Path.  Helm template can be passed.
                path: /
                # -- Ignored if not kubeVersion >= 1.14-0
                pathType: Prefix
                service:
                  # -- Overrides the service name reference for this path
                  name:
                  # -- Overrides the service port reference for this path
                  port:

        # -- Configure TLS for the ingress. Both secretName and hosts can process a Helm template.
        tls: []
        #  - secretName: chart-example-tls
        #    hosts:
        #      - chart-example.local

    # -- Configure persistence for the chart here.
    # Additional items can be added by adding a dictionary key similar to the 'config' key.
    # [[ref]](https://bjw-s.github.io/helm-charts/docs/common-library/common-library-storage)
    # @default -- See below
    persistence:
      # -- Default persistence for configuration files.
      # @default -- See below
      config:
        enabled: true
        type: pvc
        mountPath: /config
        readOnly: false
        storageClass: "longhorn"
        existingClaim: wireguard-config-v1
        accessMode: ReadWriteOnce
    resources:
      limits:
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi

    # -- The common chart supports several add-ons. These can be configured under this key.
    # @default -- See below
    addons:

      # -- The common chart supports adding a VPN add-on. It can be configured under this key.
      # @default -- See values.yaml
      vpn:
        # -- Enable running a VPN in the pod to route traffic through a VPN
        enabled: false

        # -- Specify the VPN type. Valid options are `gluetun`.
        type: gluetun

        # -- Gluetun specific configuration
        # -- Make sure to read the [documentation](https://github.com/qdm12/gluetun/wiki) to see how to configure this addon!
        # @default -- See below
        gluetun:
          image:
            # -- Specify the Gluetun image
            repository: docker.io/qmcgaw/gluetun
            # -- Specify the Gluetun image tag
            tag: v3.31.1
            # -- Specify the Gluetun image pull policy
            pullPolicy: IfNotPresent

        # -- Set the VPN container securityContext
        # @default -- See values.yaml
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE

        # -- All variables specified here will be added to the vpn sidecar container
        # See the documentation of the VPN image for all config values
        env: {}
          # TZ: UTC

        # -- Override the args for the vpn sidecar container
        args: []

        # -- Provide a customized vpn configuration file to be used by the VPN.
        configFile:  # |-
          # Some Example Config
          # remote greatvpnhost.com 8888
          # auth-user-pass
          # Cipher AES

        # -- Reference an existing secret that contains the VPN configuration file
        # The chart expects it to be present under the `vpnConfigfile` key.
        configFileSecret:

        # -- Provide custom up/down scripts that can be used by the vpn configuration.
        # @default -- See values.yaml
        scripts:
          # @default -- See below
          up:  # |-
            # #!/bin/bash
            # echo "connected" > /shared/vpnstatus

          # @default -- See below
          down:  # |-
            # #!/bin/bash
            # echo "disconnected" > /shared/vpnstatus

        additionalVolumeMounts: []

        # -- Optionally specify a livenessProbe, e.g. to check if the connection is still
        # being protected by the VPN
        livenessProbe: {}
          # exec:
          #   command:
          #     - sh
          #     - -c
          #     - if [ $(curl -s https://ipinfo.io/country) == 'US' ]; then exit 0; else exit $?; fi
          # initialDelaySeconds: 30
          # periodSeconds: 60
          # failureThreshold: 1

        networkPolicy:
          # -- If set to true, will deploy a network policy that blocks all outbound
          # traffic except traffic specified as allowed
          enabled: false

          # -- Provide additional annotations which may be required.
          annotations: {}

          # -- Provide additional labels which may be required.
          labels: {}

          # -- Provide additional podSelector labels which may be required.
          podSelectorLabels: {}

          # -- The egress configuration for your network policy, All outbound traffic
          # from the pod will be blocked unless specified here.
          # [[ref]](https://kubernetes.io/docs/concepts/services-networking/network-policies/)
          # [[recipes]](https://github.com/ahmetb/kubernetes-network-policy-recipes)
          egress:
            # - to:
            #   - ipBlock:
            #       cidr: 0.0.0.0/0
            #   ports:
            #   - port: 53
            #     protocol: UDP
            #   - port: 53
            #     protocol: TCP

      # -- The common library supports adding a code-server add-on to access files. It can be configured under this key.
      # For more info, check out [our docs](https://bjw-s.github.io/helm-charts/docs/common-library/common-library-add-ons/##code-server)
      # @default -- See values.yaml
      codeserver:
        # -- Enable running a code-server container in the pod
        enabled: false
        image:
          repository: ghcr.io/coder/code-server
          tag: 4.7.1
          pullPolicy: IfNotPresent
        env:
          TZ: ${TZ}
        args:
          - --auth
          - none
          # - --user-data-dir
          # - "/config/.vscode"

        # -- Specify a list of volumes that get mounted in the code-server container.
        # At least 1 volumeMount is required!
        volumeMounts:
          - name: config
            mountPath: /data/config

        # -- Specify the working dir that will be opened when code-server starts
        # If not given, the app will default to the mountpah of the first specified volumeMount
        workingDir: ""

        # -- Optionally allow access a Git repository by passing in a private SSH key
        # @default -- See below
        git:
          # -- Raw SSH private key
          deployKey: ""
          # -- Base64-encoded SSH private key. When both variables are set, the raw SSH key takes precedence.
          deployKeyBase64: ""
          # -- Existing secret containing SSH private key
          # The chart expects it to be present under the `id_rsa` key.
          deployKeySecret: ""

        service:
          # -- Enable a service for the code-server add-on.
          enabled: true
          type: ClusterIP
          # Specify the default port information
          ports:
            codeserver:
              port: 12321
              enabled: true
              protocol: TCP
              targetPort: codeserver
              ## Specify the nodePort value for the LoadBalancer and NodePort service types.
              ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
              ##
              # nodePort:
          annotations: {}
          labels: {}

        ingress:
          # -- Enable an ingress for the code-server add-on.
          enabled: true
          ingressClassName: "nginx"
          annotations:
            nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hosts:
            - host: &host wg-code.${SECRET_DOMAIN}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: ${SECRET_CERT}
              hosts:
                - *host

        securityContext:
          runAsUser: 0

      netshoot:
        enabled: true
        image:
          repository: ghcr.io/nicolaka/netshoot
          tag: v0.7
          pullPolicy: IfNotPresent
        env: {}
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
