---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: downloads
spec:
  interval: 5m
  chart:
    spec:
      chart: sabnzbd
      version: 9.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
  values:
    podAnnotations:
      setGateway: "true"
    image:
      repository: ghcr.io/k8s-at-home/sabnzbd
      tag: v3.6.1
      pullPolicy: IfNotPresent
    env:
      TZ: "${TZ}"
      HOST_WHITELIST_ENTRIES: "sabnzbd.${SECRET_DOMAIN}"
      WAIT_FOR_VPN: "true"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "download"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: &host sabnzbd.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT}
    persistence:
      config:
        enabled: true
        size: 1Gi
      media:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: ${NFS_MEDIA}
      downloads:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: ${NFS_DOWNLOAD}
      shared:
        enabled: true
        type: emptyDir
        mountPath: /shared

    addons:
      vpn:
        enabled: true
        # This Should be set to `wireguard`. This will set the add-on to use the default settings for Wireguard based connections.
        type: wireguard

        # If the podSecurityContext is set to run as a different user, make sure to run the Wireguard container as UID/GID 568.
        # This is required for it to be able to read certain configuration files.
        securityContext:
          runAsUser: 568
          runAsGroup: 568

        env:
          # Enable a killswitch that kills all trafic when the VPN is not connected
          KILLSWITCH: "true"

        # The wireguard configuration file provided by your VPN provider goes here.
        #
        # Set AllowedIPs to 0.0.0.0/0 to route all traffic through the VPN.
        #
        # Pay close attention to the PostUp and PreDown lines. They must be added if you wish to run a script when the connection
        # is opened / closed.
        configFile: |-
          [Interface]
          PrivateKey = kBvg4eFrtdbyT/HwTE4hMWGVXLfMn+oy4qr/sSjRCl0=
          Address = 10.5.0.2/32
          DNS = 1.1.1.1
          PostUp = /config/up.sh %i
          PreDown = /config/down.sh %i

          [Peer]
          PublicKey = fI+TUqRxe3hBC0Dil+Odbn4O8E0gewg+KdRY554BEBA=
          AllowedIPs = 0.0.0.0/0
          Endpoint = 138.199.42.231:51820

        # The scripts that get run when the VPN connection opens/closes are defined here.
        # The default scripts will write a string to represent the current connection state to a file.
        # Our qBittorrent image has a feature that can wait for this file to contain the word 'connected' before actually starting the application.
        scripts:
          up: |-
            #!/bin/bash
            echo "connected" > /shared/vpnstatus

          down: |-
            #!/bin/bash
            echo "disconnected" > /shared/vpnstatus
